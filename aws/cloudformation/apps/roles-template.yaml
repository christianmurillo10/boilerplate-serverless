AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Roles template for boilerplate serverless

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: ../../../apps
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 60

Resources:
  RolesApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      EndpointConfiguration:
        Type: EDGE
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS, PATCH'"
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
      Auth:
        DefaultAuthorizer: LambdaTokenAuthorizer
        Authorizers:
          LambdaTokenAuthorizer:
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt Authorizer.Arn
            Identity:
              ReauthorizeEvery: 0

  Authorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../../apps
      Handler: build/handlers/auth/authorizer.handler
      Description: App HTTP authorizer
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/auth/authorizer.ts

  ListRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ListRoles
      Description: Function to list roles
      Handler: build/handlers/roles/list.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles
            Method: get
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/list.ts

  ReadRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReadRoles
      Description: Function to read roles
      Handler: build/handlers/roles/read.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles/{id}
            Method: get
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/read.ts

  CreateRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateRoles
      Description: Function to create roles
      Handler: build/handlers/roles/create.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles
            Method: post
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/create.ts

  UpdateRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateRoles
      Description: Function to update roles
      Handler: build/handlers/roles/update.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles/{id}
            Method: put
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/update.ts

  DeleteRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteRoles
      Description: Function to delete roles
      Handler: build/handlers/roles/delete.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles/{id}
            Method: delete
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/delete.ts

  DeleteByIdsRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteByIdsRoles
      Description: Function to delete roles by ids
      Handler: build/handlers/roles/delete-by-ids.handler
      Events:
        App:
          Type: Api
          Properties:
            Path: /roles/delete-by-ids
            Method: post
            RestApiId: !Ref RolesApiGateway
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/handlers/roles/delete-by-ids.ts

Outputs:
  RolesApiGateway:
    Description: "App Server Role Api ARN"
    Value: !Ref RolesApiGateway